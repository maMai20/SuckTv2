'use client'; // ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ù‡∏±‡πà‡∏á Client (‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ useState)

import { useState } from "react";
import "../globals.css"; // import CSS

// ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Task
type Task = {
  id: number;
  text: string;
  done: boolean;
};

export default function Home() {
  // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° input
  const [newTask, setNewTask] = useState<string>("");

  // ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const [tasks, setTasks] = useState<Task[]>([]);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
  const addTask = () => {
    if (newTask.trim() === "") return; // ‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
    const newItem: Task = {
      id: Date.now(), // id ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
      text: newTask,
      done: false
    };
    setTasks([...tasks, newItem]);
    setNewTask("");
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô toggle ‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à/‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à
  const toggleTask = (id: number) => {
    setTasks(
      tasks.map(task =>
        task.id === id ? { ...task, done: !task.done } : task
      )
    );
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏á‡∏≤‡∏ô
  const deleteTask = (id: number) => {
    setTasks(tasks.filter(task => task.id !== id));
  };

  return (
    <div className="container">
      <h1>üìù To-Do List</h1>

      {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô */}
      <div className="input-area">
        <input
          type="text"
          placeholder="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô..."
          value={newTask}
          onChange={(e) => setNewTask(e.target.value)}
        />
        <button onClick={addTask}>‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
      </div>

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô */}
      <ul className="task-list">
        {tasks.map((task) => (
          <li key={task.id} className={task.done ? "done" : ""}>
            <input
              type="checkbox"
              checked={task.done}
              onChange={() => toggleTask(task.id)}
            />
            <span>{task.text}</span>
            <button className="delete" onClick={() => deleteTask(task.id)}>
              ‚ùå
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}
